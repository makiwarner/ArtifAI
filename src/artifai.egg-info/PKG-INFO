Metadata-Version: 2.4
Name: artifai
Version: 0.1.0
Summary: An AI-powered art history chatbot
Author-email: Your Name <your.email@example.com>
License: MIT
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: flask>=2.0.0
Requires-Dist: spacy>=3.0.0
Requires-Dist: en-core-web-md@ https://github.com/explosion/spacy-models/releases/download/en_core_web_md-3.7.1/en_core_web_md-3.7.1.tar.gz
Requires-Dist: nltk>=3.6.0
Requires-Dist: langchain>=0.1.0
Requires-Dist: langchain-community>=0.0.10
Requires-Dist: langchain-huggingface>=0.0.1
Requires-Dist: faiss-cpu>=1.7.0
Requires-Dist: sentence-transformers>=2.0.0
Requires-Dist: tiktoken
Requires-Dist: transformers
Requires-Dist: torch
Requires-Dist: numpy<2
Requires-Dist: scikit-learn
Requires-Dist: wikipedia
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: pytest-cov>=4.0.0; extra == "dev"
Requires-Dist: black>=22.0.0; extra == "dev"
Requires-Dist: flake8>=4.0.0; extra == "dev"
Requires-Dist: mypy>=1.0.0; extra == "dev"
Requires-Dist: isort>=5.0.0; extra == "dev"
Dynamic: license-file

# ArtifAI

An AI-powered art history chatbot that lets you have conversations with famous artists about their work, life, and artistic philosophy.

## Features

- Interactive conversations with famous artists
- Deep knowledge of artists' works, techniques, and historical context
- Web interface for easy interaction
- Command-line interface for direct interaction
- Fallback to Wikipedia for additional information

## Installation

```bash
# Clone the repository
git clone https://github.com/yourusername/artifai.git
cd artifai

# Create a virtual environment
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate

# Install the package
pip install -e .
```

## Usage

### Web Interface

```bash
python src/main.py
```

Then open your browser to `http://localhost:5000`

### Command Line Interface

```bash
python src/main.py
```

## Project Structure

```
artifai/
├── src/
│   ├── app/           # Web application code
│   ├── utils/         # Utility scripts
│   └── main.py        # Entry point
├── data/              # Artist data
├── tests/             # Test files
└── docs/              # Documentation
```

## Development

### Setting up the development environment

```bash
# Install development dependencies
pip install -e ".[dev]"
```

### Running tests

```bash
pytest
```

## Contributing

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/amazing-feature`)
3. Commit your changes (`git commit -m 'Add some amazing feature'`)
4. Push to the branch (`git push origin feature/amazing-feature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.
